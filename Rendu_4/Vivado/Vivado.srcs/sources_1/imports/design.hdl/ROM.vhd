--------------------------------------------------------------------------------
--
-- This VHDL file was generated by EASE/HDL 9.3 Revision 2 from HDL Works B.V.
--
-- Ease library  : Work
-- HDL library   : Work
-- Host name     : NB21-B0I-YME
-- User name     : yves.meyer
-- Time stamp    : Tue Jan  2 18:25:44 2024
--
-- Designed by   : M.Meyer/Y.Meyer
-- Company       : Haute Ecole Arc
-- Project info  : nanoProcesseur
--
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- Object        : Entity Work.ROM
-- Last modified : Tue Jan  2 10:51:32 2024
--------------------------------------------------------------------------------

library ieee;
use Work.nanoProcesseur_package.all;
use ieee.numeric_std.all;
use ieee.std_logic_1164.all;

entity ROM is
  port (
    pc_i : in     std_logic_vector(7 downto 0);
    ir_o : out    std_logic_vector(13 downto 0));
end entity ROM;

--------------------------------------------------------------------------------
-- Object        : Architecture Work.ROM.Behavioral
-- Last modified : Tue Jan  2 10:51:32 2024
--------------------------------------------------------------------------------

architecture Behavioral of ROM is


begin


with pc_i select
    ir_o <= -- début du programme en adresse 0
         -- -- X"10" load dilswitch 1
         -- -- X"10" store bargraph 1
         -- -- X"11" load dilswitch 2
         -- -- X"11" store 7seg 1
         -- -- X"E0" RAM

         -- LOADaddr & X"10" when X"00", -- load dilswitch 1
         -- STOREaddr & X"E0" when X"01", -- store in ram
         
         -- LOADaddr & X"11" when X"02", --load dilswitch 2
         -- BZ0 & X"B0" when X"03", -- saut si non égal à 0
         -- -- if dilswitch2 == 0
         -- LOADaddr & X"E0" when X"04", -- charge la valeur depuis la ram
         -- STOREaddr & X"10" when X"05", -- affiche la valeur sur le bargraph 1
         -- ANDconst & "11110000" when X"06", -- Suppresion des bits forts
         
         -- XORconst & "00000000" when X"07", -- cas 0
         -- BZ1 & X"0C" when X"08",
         -- LOADconst & "01111110" when X"09",
         -- STOREaddr & X"11" when X"0A",
         -- BRA & X"00" when X"0B",
         
         -- XORconst & "00010000" when X"0C", -- cas 1
         -- BZ1 & X"11" when X"0D",
         -- LOADconst & "00110000" when X"0E",
         -- STOREaddr & X"11" when X"0F",
         -- BRA & X"00" when X"10",
         
         -- XORconst & "00100000" when X"11", -- cas 2
         -- BZ1 & X"16" when X"12",
         -- LOADconst & "01101101" when X"13",
         -- STOREaddr & X"11" when X"14",
         -- BRA & X"00" when X"15",
         
         -- XORconst & "00110000" when X"16", -- cas 3
         -- BZ1 & X"1B" when X"17",
         -- LOADconst & "01001111" when X"18",
         -- STOREaddr & X"11" when X"19",
         -- BRA & X"00" when X"1A",
         
         -- XORconst & "01000000" when X"1B", -- cas 4
         -- BZ1 & X"20" when X"1C",
         -- LOADconst & "00110011" when X"1D",
         -- STOREaddr & X"11" when X"1E",
         -- BRA & X"00" when X"1F",
         
         -- XORconst & "01010000" when X"20", -- cas 5
         -- BZ1 & X"25" when X"21",
         -- LOADconst & "01011011" when X"22",
         -- STOREaddr & X"11" when X"23",
         -- BRA & X"00" when X"24",
         
         -- XORconst & "01100000" when X"25", -- cas 6
         -- BZ1 & X"2A" when X"26",
         -- LOADconst & "01011111" when X"27",
         -- STOREaddr & X"11" when X"28",
         -- BRA & X"00" when X"29",
         
         -- XORconst & "01110000" when X"2A", -- cas 7
         -- BZ1 & X"30" when X"2B",
         -- LOADconst & "01110000" when X"2C",
         -- STOREaddr & X"11" when X"BD",
         -- BRA & X"00" when X"2E",
         
         -- XORconst & "10000000" when X"30", -- cas 8
         -- BZ1 & X"35" when X"31",
         -- LOADconst & "01111111" when X"32",
         -- STOREaddr & X"11" when X"33",
         -- BRA & X"00" when X"34",
         
         -- XORconst & "10010000" when X"35", -- cas 9
         -- BZ1 & X"3A" when X"36",
         -- LOADconst & "01110111" when X"37",
         -- STOREaddr & X"11" when X"38",
         -- BRA & X"00" when X"39",
         
         -- XORconst & "10100000" when X"3A", -- cas A
         -- BZ1 & X"3F" when X"3B",
         -- LOADconst & "01110111" when X"3C",
         -- STOREaddr & X"11" when X"3D",
         -- BRA & X"00" when X"3E",
         
         -- XORconst & "10110000" when X"3F", -- cas B
         -- BZ1 & X"44" when X"40",
         -- LOADconst & "00011110" when X"41",
         -- STOREaddr & X"11" when X"42",
         -- BRA & X"00" when X"43",
         
         -- XORconst & "11000000" when X"44", -- cas C
         -- BZ1 & X"49" when X"45",
         -- LOADconst & "01001110" when X"46",
         -- STOREaddr & X"11" when X"47",
         -- BRA & X"00" when X"48",
         
         -- XORconst & "11010000" when X"49", -- cas D
         -- BZ1 & X"4E" when X"4A",
         -- LOADconst & "00111101" when X"4B",
         -- STOREaddr & X"11" when X"4C",
         -- BRA & X"00" when X"4D",
         
         -- XORconst & "11100000" when X"4E", -- cas E
         -- BZ1 & X"53" when X"4F",
         -- LOADconst & "00011111" when X"50",
         -- STOREaddr & X"11" when X"51",
         -- BRA & X"00" when X"52",
         
         -- XORconst & "11110000" when X"53", -- cas F
         -- BZ1 & X"00" when X"54",
         -- LOADconst & "01000111" when X"55",
         -- STOREaddr & X"11" when X"56",
         -- BRA & X"00" when X"57",
        
         -- -- else dilswitch != 0
         -- XORaddr & X"E0" when X"B0", -- Xor des deux valeurs
         -- STOREaddr & X"10" when X"B1", -- affiche la valeur sur le bargraph 1
         -- LOADconst & "01001110" when X"B2", -- charge la valeur de c
         -- STOREaddr & X"11" when X"B3", -- affiche c sur l'affichage 7seg
         -- -- end if
         -- BRA & X"00" when others; -- Boucle à l'adresse X"00" 
         
         -- Allumer 4 leds bicolores rouges
         LOADconst & X"0F" when X"00", -- Charge la constante 0000 1111
         STOREaddr & X"12" when X"01", -- Écrit la constante dans CS_PORT_C

         -- Lire l'état des 8 dilswitch 1
         LOADaddr & X"10" when X"02", -- Charge l'état des dilswitch 1

         -- Sauvegarder la valeur des dilswitch 1 en RAM
         STOREaddr & X"E0" when X"03", -- Sauvegarde la valeur en RAM

         -- Écrire l'état des dilswitch sur le barre graphe 1
         STOREaddr & X"10" when X"04", -- Écrit la valeur sur CS_PORT_A

         -- Créer une temporisation avec la valeur des dilswitch en RAM
         LOADaddr & X"E0" when X"05", -- Charge la valeur depuis la RAM
         CallFunc & X"10" when X"06", -- Appelle la sous-routine de temporisation

         -- Inverser l'état des 4 leds bicolores rouges/vertes
         LOADaddr & X"10" when X"07", -- Charge l'état actuel des leds
         XORconst & X"0F" when X"08", -- Inverse les 4 bits de poids faible
         STOREaddr & X"10" when X"09", -- Écrit le nouveau état dans CS_PORT_A
         BRA & X"02" when X"0A", -- Revient au début de la boucle

         -- Sous-routine de temporisation
         DECaddr & X"E0" when X"10", -- Décrément la valeur en RAM
         BZ0 & X"14" when X"11", -- Si la valeur est zéro, saute à l'adresse 0x14
         CallFunc & X"18" when X"12", -- Appelle la sous-routine suivante
         BRA & X"10" when X"13", -- Revient au début de la sous-routine

         ReturnFunc & X"00" when X"14", -- Retourne de la sous-routine

         -- Sous-routine appelée par la précédente
         DECaddr & X"E0" when X"18", -- Décrément la valeur en RAM
         BZ0 & X"1C" when X"19", -- Si la valeur est zéro, saute à l'adresse 0x1C
         CallFunc & X"20" when X"1A", -- Appelle la sous-routine suivante
         BRA & X"18" when X"1B", -- Revient au début de la sous-routine

         ReturnFunc & X"00" when X"1C", -- Retourne de la sous-routine

         -- Sous-routine appelée par la précédente
         DECaddr & X"E0" when X"20", -- Décrément la valeur en RAM
         BZ0 & X"24" when X"21", -- Si la valeur est zéro, saute à l'adresse 0x24
         BRA & X"20" when X"23", -- Revient au début de la sous-routine

         ReturnFunc & X"00" when X"24", -- Retourne de la sous-routine

         -- Routine d'interruption
         LOADaddr & X"12" when X"30", -- Charge l'état des dilswitch 2
         STOREaddr & X"11" when X"31", -- Écrit la valeur sur CS_PORT_B
         ReturnFunc & X"00" when X"32", -- Retourne de la routine d'interruption
         
         BRA & X"00" when others;
          
end architecture Behavioral ; -- of ROM
